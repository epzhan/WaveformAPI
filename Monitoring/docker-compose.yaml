networks:
  monitoring-network:
    name: monitoring-network
    driver: bridge

volumes:
  loki-data:
  prometheus-data:
  waveform-db-data:


services:
  waveform-api-service:
    container_name: waveform-api-app
    build: ..\RestAPI\RestAPI\RestAPI\
    restart: always
    networks:
      - monitoring-network
    ports:
      - "8080:8080"
      - "8081:8081"
    # depends_on:
    #   - db-service
    #   - prometheus-service
    #   - otel-collector

    ## Observability ##

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    networks:
      - monitoring-network
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    ports:
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC Receiver
      - "4318:4318" # OTLP HTTP Receiver
      - "9411" # Zipkin receiver
      - "8888" # OpenTelemetry internal metrics
      - "9464" # Prometheus metrics
    depends_on:
      - jaeger
      - prometheus-service
      - loki-service

    ## Metrics ##

  prometheus-service:
    container_name: prometheus
    image: prom/prometheus:latest
    networks:
      - monitoring-network
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=30d"  # Retain data for 30 days

  ## Logs ##

  loki-service:
    container_name: waveform-loki
    image: grafana/loki:latest
    networks:
      - monitoring-network
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
    command: -config.file=/etc/loki/loki-config.yaml

  ## Traces ##

  # zipkin:
  #   container_name: zipkin
  #   image: openzipkin/zipkin
  #   networks:
  #     - monitoring-network
  #   ports:
  #     - "9411:9411"

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    networks:
      - monitoring-network
    ports:
      - "16686:16686" # Jaeger UI
      - "4317" # OTLP gRPC default port
      - "4318" # OTLP HTTP default port (protobuf)
    restart: unless-stopped
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    #   - SPAN_STORAGE_TYPE=postgres
    #   - POSTGRES_CONNECTION_STRING=postgresql://postgres:develop@waveform-db:5432/waveform?sslmode=disable
    # depends_on:
    #   - db-service

  # db-service:
  #   container_name: waveform-db
  #   image: postgres:latest
  #   networks:
  #     - monitoring-network
  #   ports:
  #     - "5432:5432"
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: develop
  #     POSTGRES_DB: waveform
  #   volumes:
  #     - waveform-db-data:/var/lib/postgresql/data

    ## Analytics and Visualization ##

  grafana-service:
    container_name: waveform-grafana
    image: grafana/grafana:latest
    networks:
      - monitoring-network
    ports:
      - "3000:3000"
    volumes:
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./dashboards:/var/lib/grafana/dashboards
      - ./grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    depends_on:
      - prometheus-service
      - loki-service
      - otel-collector
