networks:
  monitoring-network:
    name: monitoring-network
    driver: bridge

volumes:
  waveform-db-data:


services:
  waveform-api-service:
    container_name: waveform-api-app
    build: ..\RestAPI\RestAPI\RestAPI\
    restart: always
    networks:
      - monitoring-network
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - db-service
      - prometheus-service

## Observability ##

  prometheus-service:
    container_name: waveform-prometheus
    image: prom/prometheus:latest
    networks:
      - monitoring-network
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana-service:
    container_name: waveform-grafana
    image: grafana/grafana:latest
    networks:
      - monitoring-network
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus-service

  db-service:
    container_name: waveform-db
    image: postgres:latest
    networks:
      - monitoring-network
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: develop
      POSTGRES_DB: waveform
    volumes:
      - waveform-db-data:/var/lib/postgres

  # api-otel:
  #   build: ./api-otel
  #   ports:
  #     - "5002:5000"
  #     - "5003:5001"
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Development
  #     - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
  #     - OTEL_TRACES_EXPORTER=otlp
  #     - OTEL_LOGS_EXPORTER=otlp
  #     - OTEL_METRICS_EXPORTER=otlp
  #   depends_on:
  #     - otel-collector

  otel-collector:
    image: otel/opentelemetry-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yml
    command: ["--config", "/etc/otel-collector-config.yml"]
    ports:
      - "4317:4317"
      - "8888:8888"
      - "9464:9464"
    depends_on:
      - prometheus-service